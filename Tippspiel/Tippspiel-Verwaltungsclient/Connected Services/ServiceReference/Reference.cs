//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tippspiel_Verwaltungsclient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bettor", Namespace="http://schemas.datacontract.org/2004/07/Tippspiel_Server.Sources.Models")]
    [System.SerializableAttribute()]
    public partial class Bettor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bet", Namespace="http://schemas.datacontract.org/2004/07/Tippspiel_Server.Sources.Models")]
    [System.SerializableAttribute()]
    public partial class Bet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AwayTeamScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Bettor BettorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HomeTeamScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Match MatchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AwayTeamScore {
            get {
                return this.AwayTeamScoreField;
            }
            set {
                if ((this.AwayTeamScoreField.Equals(value) != true)) {
                    this.AwayTeamScoreField = value;
                    this.RaisePropertyChanged("AwayTeamScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Bettor Bettor {
            get {
                return this.BettorField;
            }
            set {
                if ((object.ReferenceEquals(this.BettorField, value) != true)) {
                    this.BettorField = value;
                    this.RaisePropertyChanged("Bettor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeTeamScore {
            get {
                return this.HomeTeamScoreField;
            }
            set {
                if ((this.HomeTeamScoreField.Equals(value) != true)) {
                    this.HomeTeamScoreField = value;
                    this.RaisePropertyChanged("HomeTeamScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Match Match {
            get {
                return this.MatchField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchField, value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Match", Namespace="http://schemas.datacontract.org/2004/07/Tippspiel_Server.Sources.Models")]
    [System.SerializableAttribute()]
    public partial class Match : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Team AwayTeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AwayTeamScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Team HomeTeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HomeTeamScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Season SeasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Team AwayTeam {
            get {
                return this.AwayTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.AwayTeamField, value) != true)) {
                    this.AwayTeamField = value;
                    this.RaisePropertyChanged("AwayTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AwayTeamScore {
            get {
                return this.AwayTeamScoreField;
            }
            set {
                if ((this.AwayTeamScoreField.Equals(value) != true)) {
                    this.AwayTeamScoreField = value;
                    this.RaisePropertyChanged("AwayTeamScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Team HomeTeam {
            get {
                return this.HomeTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeTeamField, value) != true)) {
                    this.HomeTeamField = value;
                    this.RaisePropertyChanged("HomeTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeTeamScore {
            get {
                return this.HomeTeamScoreField;
            }
            set {
                if ((this.HomeTeamScoreField.Equals(value) != true)) {
                    this.HomeTeamScoreField = value;
                    this.RaisePropertyChanged("HomeTeamScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchDay {
            get {
                return this.MatchDayField;
            }
            set {
                if ((this.MatchDayField.Equals(value) != true)) {
                    this.MatchDayField = value;
                    this.RaisePropertyChanged("MatchDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Season Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((object.ReferenceEquals(this.SeasonField, value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Team", Namespace="http://schemas.datacontract.org/2004/07/Tippspiel_Server.Sources.Models")]
    [System.SerializableAttribute()]
    public partial class Team : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Season[] SeasonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Season[] Seasons {
            get {
                return this.SeasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeasonsField, value) != true)) {
                    this.SeasonsField = value;
                    this.RaisePropertyChanged("Seasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Season", Namespace="http://schemas.datacontract.org/2004/07/Tippspiel_Server.Sources.Models")]
    [System.SerializableAttribute()]
    public partial class Season : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tippspiel_Verwaltungsclient.ServiceReference.Team[] TeamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tippspiel_Verwaltungsclient.ServiceReference.Team[] Teams {
            get {
                return this.TeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamsField, value) != true)) {
                    this.TeamsField = value;
                    this.RaisePropertyChanged("Teams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBets", ReplyAction="http://tempuri.org/IService/GetAllBetsResponse")]
        Tippspiel_Verwaltungsclient.ServiceReference.Bet[] GetAllBets(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBets", ReplyAction="http://tempuri.org/IService/GetAllBetsResponse")]
        System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Bet[]> GetAllBetsAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBet", ReplyAction="http://tempuri.org/IService/CreateBetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object CreateBet(System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBet", ReplyAction="http://tempuri.org/IService/CreateBetResponse")]
        System.Threading.Tasks.Task<object> CreateBetAsync(System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBet", ReplyAction="http://tempuri.org/IService/EditBetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object EditBet(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet, System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBet", ReplyAction="http://tempuri.org/IService/EditBetResponse")]
        System.Threading.Tasks.Task<object> EditBetAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet, System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBet", ReplyAction="http://tempuri.org/IService/DeleteBetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object DeleteBet(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBet", ReplyAction="http://tempuri.org/IService/DeleteBetResponse")]
        System.Threading.Tasks.Task<object> DeleteBetAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBettors", ReplyAction="http://tempuri.org/IService/GetAllBettorsResponse")]
        Tippspiel_Verwaltungsclient.ServiceReference.Bettor[] GetAllBettors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllBettors", ReplyAction="http://tempuri.org/IService/GetAllBettorsResponse")]
        System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]> GetAllBettorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBettor", ReplyAction="http://tempuri.org/IService/CreateBettorResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object CreateBettor(string nickname, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBettor", ReplyAction="http://tempuri.org/IService/CreateBettorResponse")]
        System.Threading.Tasks.Task<object> CreateBettorAsync(string nickname, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBettor", ReplyAction="http://tempuri.org/IService/EditBettorResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object EditBettor(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor, string nickname, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditBettor", ReplyAction="http://tempuri.org/IService/EditBettorResponse")]
        System.Threading.Tasks.Task<object> EditBettorAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor, string nickname, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBettor", ReplyAction="http://tempuri.org/IService/DeleteBettorResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object DeleteBettor(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBettor", ReplyAction="http://tempuri.org/IService/DeleteBettorResponse")]
        System.Threading.Tasks.Task<object> DeleteBettorAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllMatches", ReplyAction="http://tempuri.org/IService/GetAllMatchesResponse")]
        Tippspiel_Verwaltungsclient.ServiceReference.Match[] GetAllMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllMatches", ReplyAction="http://tempuri.org/IService/GetAllMatchesResponse")]
        System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Match[]> GetAllMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateMatch", ReplyAction="http://tempuri.org/IService/CreateMatchResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object CreateMatch(int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateMatch", ReplyAction="http://tempuri.org/IService/CreateMatchResponse")]
        System.Threading.Tasks.Task<object> CreateMatchAsync(int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditMatch", ReplyAction="http://tempuri.org/IService/EditMatchResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object EditMatch(Tippspiel_Verwaltungsclient.ServiceReference.Match match, int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditMatch", ReplyAction="http://tempuri.org/IService/EditMatchResponse")]
        System.Threading.Tasks.Task<object> EditMatchAsync(Tippspiel_Verwaltungsclient.ServiceReference.Match match, int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteMatch", ReplyAction="http://tempuri.org/IService/DeleteMatchResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object DeleteMatch(Tippspiel_Verwaltungsclient.ServiceReference.Match match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteMatch", ReplyAction="http://tempuri.org/IService/DeleteMatchResponse")]
        System.Threading.Tasks.Task<object> DeleteMatchAsync(Tippspiel_Verwaltungsclient.ServiceReference.Match match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSeasons", ReplyAction="http://tempuri.org/IService/GetAllSeasonsResponse")]
        Tippspiel_Verwaltungsclient.ServiceReference.Season[] GetAllSeasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSeasons", ReplyAction="http://tempuri.org/IService/GetAllSeasonsResponse")]
        System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Season[]> GetAllSeasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeason", ReplyAction="http://tempuri.org/IService/CreateSeasonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object CreateSeason(string name, string description, int sequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeason", ReplyAction="http://tempuri.org/IService/CreateSeasonResponse")]
        System.Threading.Tasks.Task<object> CreateSeasonAsync(string name, string description, int sequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditSeason", ReplyAction="http://tempuri.org/IService/EditSeasonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object EditSeason(Tippspiel_Verwaltungsclient.ServiceReference.Season season, string name, string description, int sequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditSeason", ReplyAction="http://tempuri.org/IService/EditSeasonResponse")]
        System.Threading.Tasks.Task<object> EditSeasonAsync(Tippspiel_Verwaltungsclient.ServiceReference.Season season, string name, string description, int sequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeason", ReplyAction="http://tempuri.org/IService/DeleteSeasonResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object DeleteSeason(Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeason", ReplyAction="http://tempuri.org/IService/DeleteSeasonResponse")]
        System.Threading.Tasks.Task<object> DeleteSeasonAsync(Tippspiel_Verwaltungsclient.ServiceReference.Season season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllTeams", ReplyAction="http://tempuri.org/IService/GetAllTeamsResponse")]
        Tippspiel_Verwaltungsclient.ServiceReference.Team[] GetAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllTeams", ReplyAction="http://tempuri.org/IService/GetAllTeamsResponse")]
        System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Team[]> GetAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTeam", ReplyAction="http://tempuri.org/IService/CreateTeamResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object CreateTeam(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTeam", ReplyAction="http://tempuri.org/IService/CreateTeamResponse")]
        System.Threading.Tasks.Task<object> CreateTeamAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditTeam", ReplyAction="http://tempuri.org/IService/EditTeamResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object EditTeam(Tippspiel_Verwaltungsclient.ServiceReference.Team team, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditTeam", ReplyAction="http://tempuri.org/IService/EditTeamResponse")]
        System.Threading.Tasks.Task<object> EditTeamAsync(Tippspiel_Verwaltungsclient.ServiceReference.Team team, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeaMessage", ReplyAction="http://tempuri.org/IService/DeleteTeaMessageResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Season))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Tippspiel_Verwaltungsclient.ServiceReference.Match[]))]
        object DeleteTeaMessage(Tippspiel_Verwaltungsclient.ServiceReference.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeaMessage", ReplyAction="http://tempuri.org/IService/DeleteTeaMessageResponse")]
        System.Threading.Tasks.Task<object> DeleteTeaMessageAsync(Tippspiel_Verwaltungsclient.ServiceReference.Team team);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Tippspiel_Verwaltungsclient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Tippspiel_Verwaltungsclient.ServiceReference.IService>, Tippspiel_Verwaltungsclient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Tippspiel_Verwaltungsclient.ServiceReference.Bet[] GetAllBets(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.GetAllBets(bettor);
        }
        
        public System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Bet[]> GetAllBetsAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.GetAllBetsAsync(bettor);
        }
        
        public object CreateBet(System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.CreateBet(dateTime, homeTeamScore, awayTeamScore, match, bettor);
        }
        
        public System.Threading.Tasks.Task<object> CreateBetAsync(System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.CreateBetAsync(dateTime, homeTeamScore, awayTeamScore, match, bettor);
        }
        
        public object EditBet(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet, System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.EditBet(bet, dateTime, homeTeamScore, awayTeamScore, match, bettor);
        }
        
        public System.Threading.Tasks.Task<object> EditBetAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet, System.DateTime dateTime, int homeTeamScore, int awayTeamScore, Tippspiel_Verwaltungsclient.ServiceReference.Match match, Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.EditBetAsync(bet, dateTime, homeTeamScore, awayTeamScore, match, bettor);
        }
        
        public object DeleteBet(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet) {
            return base.Channel.DeleteBet(bet);
        }
        
        public System.Threading.Tasks.Task<object> DeleteBetAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bet bet) {
            return base.Channel.DeleteBetAsync(bet);
        }
        
        public Tippspiel_Verwaltungsclient.ServiceReference.Bettor[] GetAllBettors() {
            return base.Channel.GetAllBettors();
        }
        
        public System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Bettor[]> GetAllBettorsAsync() {
            return base.Channel.GetAllBettorsAsync();
        }
        
        public object CreateBettor(string nickname, string firstName, string lastName) {
            return base.Channel.CreateBettor(nickname, firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<object> CreateBettorAsync(string nickname, string firstName, string lastName) {
            return base.Channel.CreateBettorAsync(nickname, firstName, lastName);
        }
        
        public object EditBettor(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor, string nickname, string firstName, string lastName) {
            return base.Channel.EditBettor(bettor, nickname, firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<object> EditBettorAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor, string nickname, string firstName, string lastName) {
            return base.Channel.EditBettorAsync(bettor, nickname, firstName, lastName);
        }
        
        public object DeleteBettor(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.DeleteBettor(bettor);
        }
        
        public System.Threading.Tasks.Task<object> DeleteBettorAsync(Tippspiel_Verwaltungsclient.ServiceReference.Bettor bettor) {
            return base.Channel.DeleteBettorAsync(bettor);
        }
        
        public Tippspiel_Verwaltungsclient.ServiceReference.Match[] GetAllMatches() {
            return base.Channel.GetAllMatches();
        }
        
        public System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Match[]> GetAllMatchesAsync() {
            return base.Channel.GetAllMatchesAsync();
        }
        
        public object CreateMatch(int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.CreateMatch(matchDay, dateTime, homeTeam, awayTeam, season);
        }
        
        public System.Threading.Tasks.Task<object> CreateMatchAsync(int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.CreateMatchAsync(matchDay, dateTime, homeTeam, awayTeam, season);
        }
        
        public object EditMatch(Tippspiel_Verwaltungsclient.ServiceReference.Match match, int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.EditMatch(match, matchDay, dateTime, homeTeam, awayTeam, season);
        }
        
        public System.Threading.Tasks.Task<object> EditMatchAsync(Tippspiel_Verwaltungsclient.ServiceReference.Match match, int matchDay, System.DateTime dateTime, Tippspiel_Verwaltungsclient.ServiceReference.Team homeTeam, Tippspiel_Verwaltungsclient.ServiceReference.Team awayTeam, Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.EditMatchAsync(match, matchDay, dateTime, homeTeam, awayTeam, season);
        }
        
        public object DeleteMatch(Tippspiel_Verwaltungsclient.ServiceReference.Match match) {
            return base.Channel.DeleteMatch(match);
        }
        
        public System.Threading.Tasks.Task<object> DeleteMatchAsync(Tippspiel_Verwaltungsclient.ServiceReference.Match match) {
            return base.Channel.DeleteMatchAsync(match);
        }
        
        public Tippspiel_Verwaltungsclient.ServiceReference.Season[] GetAllSeasons() {
            return base.Channel.GetAllSeasons();
        }
        
        public System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Season[]> GetAllSeasonsAsync() {
            return base.Channel.GetAllSeasonsAsync();
        }
        
        public object CreateSeason(string name, string description, int sequence) {
            return base.Channel.CreateSeason(name, description, sequence);
        }
        
        public System.Threading.Tasks.Task<object> CreateSeasonAsync(string name, string description, int sequence) {
            return base.Channel.CreateSeasonAsync(name, description, sequence);
        }
        
        public object EditSeason(Tippspiel_Verwaltungsclient.ServiceReference.Season season, string name, string description, int sequence) {
            return base.Channel.EditSeason(season, name, description, sequence);
        }
        
        public System.Threading.Tasks.Task<object> EditSeasonAsync(Tippspiel_Verwaltungsclient.ServiceReference.Season season, string name, string description, int sequence) {
            return base.Channel.EditSeasonAsync(season, name, description, sequence);
        }
        
        public object DeleteSeason(Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.DeleteSeason(season);
        }
        
        public System.Threading.Tasks.Task<object> DeleteSeasonAsync(Tippspiel_Verwaltungsclient.ServiceReference.Season season) {
            return base.Channel.DeleteSeasonAsync(season);
        }
        
        public Tippspiel_Verwaltungsclient.ServiceReference.Team[] GetAllTeams() {
            return base.Channel.GetAllTeams();
        }
        
        public System.Threading.Tasks.Task<Tippspiel_Verwaltungsclient.ServiceReference.Team[]> GetAllTeamsAsync() {
            return base.Channel.GetAllTeamsAsync();
        }
        
        public object CreateTeam(string name) {
            return base.Channel.CreateTeam(name);
        }
        
        public System.Threading.Tasks.Task<object> CreateTeamAsync(string name) {
            return base.Channel.CreateTeamAsync(name);
        }
        
        public object EditTeam(Tippspiel_Verwaltungsclient.ServiceReference.Team team, string name) {
            return base.Channel.EditTeam(team, name);
        }
        
        public System.Threading.Tasks.Task<object> EditTeamAsync(Tippspiel_Verwaltungsclient.ServiceReference.Team team, string name) {
            return base.Channel.EditTeamAsync(team, name);
        }
        
        public object DeleteTeaMessage(Tippspiel_Verwaltungsclient.ServiceReference.Team team) {
            return base.Channel.DeleteTeaMessage(team);
        }
        
        public System.Threading.Tasks.Task<object> DeleteTeaMessageAsync(Tippspiel_Verwaltungsclient.ServiceReference.Team team) {
            return base.Channel.DeleteTeaMessageAsync(team);
        }
    }
}
